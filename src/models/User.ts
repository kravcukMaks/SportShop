import mongoose, { Schema, Document, Model } from 'mongoose';

export interface IUser extends Document {
  firstName: string;
  lastName: string;
  email: string;
  password: string;
  createdAt?: Date;
  updatedAt?: Date;
}

const UserSchema: Schema<IUser> = new Schema(
  {
    firstName: {
      type: String,
      required: [true, 'üë§ –Ü–º‚Äô—è –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–µ'],
      trim: true,
    },
    lastName: {
      type: String,
      required: [true, 'üë• –ü—Ä—ñ–∑–≤–∏—â–µ –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–µ'],
      trim: true,
    },
    email: {
      type: String,
      required: [true, 'üìß Email –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–∏–π'],
      unique: true,
      trim: true,
      lowercase: true,
      match: [
        /^\w+([.-]?\w+)*@\w+([.-]?\w+)*(\.\w{2,3})+$/,
        '–ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç email',
      ],
    },
    password: {
      type: String,
      required: [true, 'üîê –ü–∞—Ä–æ–ª—å –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–∏–π'],
      minlength: [6, '–ü–∞—Ä–æ–ª—å –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ —â–æ–Ω–∞–π–º–µ–Ω—à–µ 6 —Å–∏–º–≤–æ–ª—ñ–≤'],
    },
  },
  { timestamps: true }
);

const User: Model<IUser> =
  mongoose.models.User || mongoose.model<IUser>('User', UserSchema);

export default User;


